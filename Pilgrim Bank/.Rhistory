#}
}
print(sort(deltaOnOff, decreasing = TRUE))
set.seed(1)
num_tot_cluster = 6
df = data.frame(Age1, Age2, Age3, Age4, Age5, Age6, Age7)#, Income1, Income2, Income3, Income4, Income5, Income6, Income7, Income8, Income9)
k2 <- kmeans(df, centers = num_tot_cluster, nstart = 25)
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
#print(paste("Tot in cluster:", sum(k2$cluster==num_cluster)))
#print(paste("Offline in cluster",sum(Online0[k2$cluster==num_cluster]==0)))#/sum(k2$cluster==num_cluster))
#print(paste("Online in cluster",sum(Online0[k2$cluster==num_cluster]==1)))
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
#print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
#print(paste("deltaProfit online ",deltaProfitOnline))
#print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
set.seed(1)
num_tot_cluster = 25
df = data.frame(Age1, Age2, Age3, Age4, Age5, Age6, Age7, Income1, Income2, Income3, Income4, Income5, Income6, Income7, Income8, Income9)
k2 <- kmeans(df, centers = num_tot_cluster, nstart = 25)
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
#print(paste("Tot in cluster:", sum(k2$cluster==num_cluster)))
#print(paste("Offline in cluster",sum(Online0[k2$cluster==num_cluster]==0)))#/sum(k2$cluster==num_cluster))
#print(paste("Online in cluster",sum(Online0[k2$cluster==num_cluster]==1)))
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
#print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
#print(paste("deltaProfit online ",deltaProfitOnline))
#print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
print(paste("Tot in cluster:", sum(k2$cluster==num_cluster)))
print(paste("Offline in cluster",sum(Online0[k2$cluster==num_cluster]==0)))#/sum(k2$cluster==num_cluster))
print(paste("Online in cluster",sum(Online0[k2$cluster==num_cluster]==1)))
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
print(paste("deltaProfit online ",deltaProfitOnline))
print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
print(paste("Tot in cluster:", sum(k2$cluster==num_cluster)))
print(paste("Offline in cluster",sum(Online0[k2$cluster==num_cluster]==0)))#/sum(k2$cluster==num_cluster))
print(paste("Online in cluster",sum(Online0[k2$cluster==num_cluster]==1)))
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
#print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
#print(paste("deltaProfit online ",deltaProfitOnline))
#print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
print(paste("Tot in cluster:", sum(k2$cluster==num_cluster)))
print(paste("Offline in cluster",sum(Online0[k2$cluster==num_cluster]==0)/sum(k2$cluster==num_cluster))
print(paste("Online in cluster",sum(Online0[k2$cluster==num_cluster]==1)))
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
print(paste("Tot in cluster:", sum(k2$cluster==num_cluster)))
print(paste("Offline in cluster",sum(Online0[k2$cluster==num_cluster]==0)/sum(k2$cluster==num_cluster)))
print(paste("Online in cluster",sum(Online0[k2$cluster==num_cluster]==1)))
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
#print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
#print(paste("deltaProfit online ",deltaProfitOnline))
#print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
print(paste("deltaProfit online ",deltaProfitOnline))
print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
deltaProfit = Profit0-Profit9
deltaOnOff = rep(0,num_tot_cluster)
for(num_cluster in 1:num_tot_cluster) {
deltaProfitOnline  = mean(deltaProfit[Online0[k2$cluster==num_cluster]==1])
deltaProfitOffline = mean(deltaProfit[Online0[k2$cluster==num_cluster]==0])
if(is.na(deltaProfitOnline)){deltaProfitOnline=0}
if(is.na(deltaProfitOffline)){deltaProfitOffline=0}
#print(paste("Perc di Online con profitto positivo" ,mean(deltaProfit[Online0[k2$cluster==num_cluster]==1]>0)))
print(paste("deltaProfit online ",deltaProfitOnline))
print(paste("deltaProfit offline",deltaProfitOffline))
#if(deltaProfitOnline-deltaProfitOffline>0){
deltaOnOff[num_cluster] = deltaProfitOnline-deltaProfitOffline
#}
}
print(sort(deltaOnOff, decreasing = TRUE))
knitr::opts_chunk$set(echo = TRUE)
rm(list =ls())
set.seed(1)
Pilgrim = read.csv(file = "PilgrimABC.csv", header=T)
attach(Pilgrim)
Profit=Pilgrim$X9Profit
Online=Pilgrim$X9Online
Age=Pilgrim$X9Age
Income=Pilgrim$X9Inc
Tenure=Pilgrim$X9Tenure
District=Pilgrim$X9District
summary(Profit)
cat('average profit ', mean(Profit), '\n')
ProfitOnline = Profit[Online==1]
cat('average profit ON', mean(ProfitOnline), '\n')
ProfitOffline = Profit[Online==0]
cat('average profit OFF', mean(ProfitOffline), '\n')
cat('Conf int profit ', t.test(Profit)$conf.int, '\n')
cat('p-value difference ',t.test(ProfitOnline,ProfitOffline)$p.value, '\n')
mod = lm(Profit ~ Online)
summary(mod)
sum(is.na(Age))
AgeGiven = ifelse(is.na(Age),0,1) # 0 dove c'è NA, 1 se c'è l'età
mod = lm(Profit ~ AgeGiven)
summary(mod)
AgeZero = ifelse(is.na(Age),0,Age)
table(AgeZero)
mod = lm(Profit ~ Online+AgeZero)
summary(mod)
mm = mean(Age, na.rm=TRUE)
AgeAverage = ifelse(is.na(Age),mm,Age)
table(AgeAverage)
mod = lm(Profit ~ Online+AgeAverage)
summary(mod)
mod = lm(Profit ~ Online+AgeZero+AgeGiven)
summary(mod)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven)
summary(mod)
mod = lm(Profit ~ Age+Online+ Online:Age)
summary(mod)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Online:Age1)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Online:Age)
mod = lm(Profit ~ Online+Age+Income1+Tenure+District1100+District1200+Online:Age)
mod = lm(Profit ~ Online+Age+Income+Tenure+District1100+District1200+Online:Age)
knitr::opts_chunk$set(echo = TRUE)
rm(list =ls())
set.seed(1)
Pilgrim = read.csv(file = "PilgrimABC.csv", header=T)
attach(Pilgrim)
dim(Pilgrim)
names(Pilgrim[, 1:9])
Profit=Pilgrim$X9Profit
Online=Pilgrim$X9Online
Age=Pilgrim$X9Age
Income=Pilgrim$X9Inc
Tenure=Pilgrim$X9Tenure
District=Pilgrim$X9District
head(Pilgrim)
summary(Profit)
hist(Profit)
N=length(Profit)
Nprofitable = sum(Profit>0)
cat('profitable = ', Nprofitable, ' out of ', N, '\n')
cumprofit=cumsum(sort(Profit,decreasing=TRUE))*100/sum(Profit)
plot(100*(1:N)/N,cumprofit,type='l')
grid()
cat('average profit ', mean(Profit), '\n')
ProfitOnline = Profit[Online==1]
cat('average profit ON', mean(ProfitOnline), '\n')
ProfitOffline = Profit[Online==0]
cat('average profit OFF', mean(ProfitOffline), '\n')
cat('Conf int profit ', t.test(Profit)$conf.int, '\n')
cat('p-value difference ',t.test(ProfitOnline,ProfitOffline)$p.value, '\n')
mod = lm(Profit ~ Online)
summary(mod)
Age1 = as.factor(Age)
summary(Age1)
mod = lm(Profit ~ Online+Age1)
summary(mod)
lapply(split(Profit,as.factor(Age)),mean)
lapply(split(Online,as.factor(Age)),mean)
sum(is.na(Age))
AgeGiven = ifelse(is.na(Age),0,1) # 0 dove c'è NA, 1 se c'è l'età
mod = lm(Profit ~ AgeGiven)
summary(mod)
AgeZero = ifelse(is.na(Age),0,Age)
table(AgeZero)
mod = lm(Profit ~ Online+AgeZero)
summary(mod)
mm = mean(Age, na.rm=TRUE)
AgeAverage = ifelse(is.na(Age),mm,Age)
table(AgeAverage)
mod = lm(Profit ~ Online+AgeAverage)
summary(mod)
mod = lm(Profit ~ Online+AgeZero+AgeGiven)
summary(mod)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven)
summary(mod)
IncomeZero = ifelse(is.na(Income),0,Income)
IncomeGiven = ifelse(is.na(Income),0,1)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven+IncomeZero+IncomeGiven)
summary(mod)
any(is.na(District))
table(District)
District1100 = ifelse(District==1100,1,0)
District1200 = ifelse(District==1200,1,0)
any(is.na(Tenure))
mod = lm(Profit ~ Online+AgeAverage+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod)
AgeCat = ifelse(is.na(Age)==TRUE,0,Age)
Age1=as.factor(AgeCat)
levels(Age1)
mod = lm(Profit ~ Online+Age1+IncomeZero+IncomeGiven+Tenure+District1100+District1200)
summary(mod)
IncomeCat = ifelse(is.na(Income)==TRUE,0,Income)
Income1=as.factor(IncomeCat)
levels(Income1)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200)
summary(mod)
mod = lm(Profit ~ Online+Age+Income+Tenure+District1100+District1200+Online:Age)
summary(mod)
mod = lm(Profit ~ Online+Age+Income+Tenure+District1100+District1200+Online:Age+Income:Online)
summary(mod)
mod = lm(Profit ~ Online+Age+Income+Tenure+District1100+District1200+Income:Online)
summary(mod)
mod = lm(Profit ~ Online+Age+Income+Tenure+District1100+District1200+Income:Age)
summary(mod)
IncomeCat = ifelse(is.na(Income)==TRUE,0,Income)
Income1=as.factor(IncomeCat)
levels(Income1)
AgeCat = ifelse(is.na(Age)==TRUE,0,Age)
Age1=as.factor(AgeCat)
levels(Age1)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Income1:Age1)
summary(mod)
knitr::opts_chunk$set(echo = TRUE)
rm(list =ls())
set.seed(1)
Pilgrim = read.csv(file = "PilgrimABC.csv", header=T)
attach(Pilgrim)
dim(Pilgrim)
names(Pilgrim[, 1:9])
Profit=Pilgrim$X9Profit
Online=Pilgrim$X9Online
Age=Pilgrim$X9Age
Income=Pilgrim$X9Inc
Tenure=Pilgrim$X9Tenure
District=Pilgrim$X9District
head(Pilgrim)
summary(Profit)
hist(Profit)
N=length(Profit)
Nprofitable = sum(Profit>0)
cat('profitable = ', Nprofitable, ' out of ', N, '\n')
cumprofit=cumsum(sort(Profit,decreasing=TRUE))*100/sum(Profit)
plot(100*(1:N)/N,cumprofit,type='l')
grid()
cat('average profit ', mean(Profit), '\n')
ProfitOnline = Profit[Online==1]
cat('average profit ON', mean(ProfitOnline), '\n')
ProfitOffline = Profit[Online==0]
cat('average profit OFF', mean(ProfitOffline), '\n')
cat('Conf int profit ', t.test(Profit)$conf.int, '\n')
cat('p-value difference ',t.test(ProfitOnline,ProfitOffline)$p.value, '\n')
mod = lm(Profit ~ Online)
summary(mod)
Age1 = as.factor(Age)
summary(Age1)
mod = lm(Profit ~ Online+Age1)
summary(mod)
lapply(split(Profit,as.factor(Age)),mean)
lapply(split(Online,as.factor(Age)),mean)
sum(is.na(Age))
AgeGiven = ifelse(is.na(Age),0,1) # 0 dove c'è NA, 1 se c'è l'età
mod = lm(Profit ~ AgeGiven)
summary(mod)
AgeZero = ifelse(is.na(Age),0,Age)
table(AgeZero)
mod = lm(Profit ~ Online+AgeZero)
summary(mod)
mm = mean(Age, na.rm=TRUE)
AgeAverage = ifelse(is.na(Age),mm,Age)
table(AgeAverage)
mod = lm(Profit ~ Online+AgeAverage)
summary(mod)
mod = lm(Profit ~ Online+AgeZero+AgeGiven)
summary(mod)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven)
summary(mod)
IncomeZero = ifelse(is.na(Income),0,Income)
IncomeGiven = ifelse(is.na(Income),0,1)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven+IncomeZero+IncomeGiven)
summary(mod)
any(is.na(District))
table(District)
District1100 = ifelse(District==1100,1,0)
District1200 = ifelse(District==1200,1,0)
any(is.na(Tenure))
mod = lm(Profit ~ Online+AgeAverage+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod)
AgeCat = ifelse(is.na(Age)==TRUE,0,Age)
Age1=as.factor(AgeCat)
levels(Age1)
mod = lm(Profit ~ Online+Age1+IncomeZero+IncomeGiven+Tenure+District1100+District1200)
summary(mod)
IncomeCat = ifelse(is.na(Income)==TRUE,0,Income)
Income1=as.factor(IncomeCat)
levels(Income1)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200)
summary(mod)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Income1:Age1)
summary(mod)
#Rinominiamo le variabili
Profit9=X9Profit
Online9=X9Online
Profit0=X0Profit
Online0=X0Online
Income=X9Inc
Age=X9Age
mod1 = lm(Profit0 ~ Online9)
summary(mod1)
mod2 = lm(Profit0 ~ Online9+AgeZero+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod2)
plot(Profit9, Profit0)
mod3 = lm(Profit0 ~ Profit9+Online9+AgeZero+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod3)
mod4 = lm(Profit0 ~ Profit9+Online9+Tenure+District1100+District1200)
summary(mod4)
cor(Profit9,Profit0,use="complete.obs")
sum(Profit0>5000,na.rm=TRUE)
sum(Profit0<(-5000),na.rm=TRUE)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Income1:Age1)
summary(mod)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Age1:Online)
summary(mod)
mod4 = lm(Profit0 ~ Profit9+Online9+Tenure+District1100+District1200+Profit9:Online9)
summary(mod4)
mod5 = lm(Profit0 ~ Profit9+Online9+Tenure+District1100+District1200+Profit9:Online9)
summary(mod5)
knitr::opts_chunk$set(echo = TRUE)
rm(list =ls())
set.seed(1)
Pilgrim = read.csv(file = "PilgrimABC.csv", header=T)
attach(Pilgrim)
dim(Pilgrim)
names(Pilgrim[, 1:9])
Profit=Pilgrim$X9Profit
Online=Pilgrim$X9Online
Age=Pilgrim$X9Age
Income=Pilgrim$X9Inc
Tenure=Pilgrim$X9Tenure
District=Pilgrim$X9District
head(Pilgrim)
summary(Profit)
hist(Profit)
N=length(Profit)
Nprofitable = sum(Profit>0)
cat('profitable = ', Nprofitable, ' out of ', N, '\n')
cumprofit=cumsum(sort(Profit,decreasing=TRUE))*100/sum(Profit)
plot(100*(1:N)/N,cumprofit,type='l')
grid()
cat('average profit ', mean(Profit), '\n')
ProfitOnline = Profit[Online==1]
cat('average profit ON', mean(ProfitOnline), '\n')
ProfitOffline = Profit[Online==0]
cat('average profit OFF', mean(ProfitOffline), '\n')
cat('Conf int profit ', t.test(Profit)$conf.int, '\n')
cat('p-value difference ',t.test(ProfitOnline,ProfitOffline)$p.value, '\n')
mod = lm(Profit ~ Online)
summary(mod)
Age1 = as.factor(Age)
summary(Age1)
mod = lm(Profit ~ Online+Age1)
summary(mod)
lapply(split(Profit,as.factor(Age)),mean)
lapply(split(Online,as.factor(Age)),mean)
sum(is.na(Age))
AgeGiven = ifelse(is.na(Age),0,1) # 0 dove c'è NA, 1 se c'è l'età
mod = lm(Profit ~ AgeGiven)
summary(mod)
AgeZero = ifelse(is.na(Age),0,Age)
table(AgeZero)
mod = lm(Profit ~ Online+AgeZero)
summary(mod)
mm = mean(Age, na.rm=TRUE)
AgeAverage = ifelse(is.na(Age),mm,Age)
table(AgeAverage)
mod = lm(Profit ~ Online+AgeAverage)
summary(mod)
mod = lm(Profit ~ Online+AgeZero+AgeGiven)
summary(mod)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven)
summary(mod)
IncomeZero = ifelse(is.na(Income),0,Income)
IncomeGiven = ifelse(is.na(Income),0,1)
mod = lm(Profit ~ Online+AgeAverage+AgeGiven+IncomeZero+IncomeGiven)
summary(mod)
any(is.na(District))
table(District)
District1100 = ifelse(District==1100,1,0)
District1200 = ifelse(District==1200,1,0)
any(is.na(Tenure))
mod = lm(Profit ~ Online+AgeAverage+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod)
AgeCat = ifelse(is.na(Age)==TRUE,0,Age)
Age1=as.factor(AgeCat)
levels(Age1)
mod = lm(Profit ~ Online+Age1+IncomeZero+IncomeGiven+Tenure+District1100+District1200)
summary(mod)
IncomeCat = ifelse(is.na(Income)==TRUE,0,Income)
Income1=as.factor(IncomeCat)
levels(Income1)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200)
summary(mod)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Income1:Age1)
summary(mod)
mod = lm(Profit ~ Online+Age1+Income1+Tenure+District1100+District1200+Age1:Online)
summary(mod)
#Rinominiamo le variabili
Profit9=X9Profit
Online9=X9Online
Profit0=X0Profit
Online0=X0Online
Income=X9Inc
Age=X9Age
mod1 = lm(Profit0 ~ Online9)
summary(mod1)
mod2 = lm(Profit0 ~ Online9+AgeZero+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod2)
plot(Profit9, Profit0)
mod3 = lm(Profit0 ~ Profit9+Online9+AgeZero+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod3)
mod4 = lm(Profit0 ~ Profit9+Online9+Tenure+District1100+District1200)
summary(mod4)
cor(Profit9,Profit0,use="complete.obs")
sum(Profit0>5000,na.rm=TRUE)
sum(Profit0<(-5000),na.rm=TRUE)
c=which(abs(Profit0)>5000)
detach(Pilgrim)
data=Pilgrim[-c,]
attach(data)
Profit9=X9Profit
Online9=X9Online
Age=X9Age
Income=X9Inc
Tenure=X9Tenure
District=X9District
Profit0=X0Profit
Online0=X0Online
District1100 = ifelse(District==1100,1,0)
District1200 = ifelse(District==1200,1,0)
AgeGiven = ifelse(is.na(Age),0,1)
AgeZero = ifelse(is.na(Age),0,Age)
IncomeZero = ifelse(is.na(Income),0,Income)
IncomeGiven = ifelse(is.na(Income),0,1)
mod3 = lm(Profit0 ~ Profit9+Online9+AgeZero+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200)
summary(mod3)
mod4 = lm(Profit0 ~ Profit9+Online9+Tenure+District1100+District1200)
summary(mod4)
mod5 = lm(Profit0 ~ Profit9+Online9+Tenure+District1100+District1200+Profit9:Online9)
summary(mod5)
mod6 = lm(Profit0 ~ Profit9+Online9+AgeZero+AgeGiven+IncomeZero+IncomeGiven+Tenure
+District1100+District1200+ IncomeZero:AgeZero)
summary(mod6)
rm(list =ls())
set.seed(1)
Pilgrim = read.csv(file = "PilgrimABC.csv", header=T)
